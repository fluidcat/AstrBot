import os
import uuid
import aiohttp

from astrbot.core.provider.entities import ProviderType
from astrbot.core.provider.provider import TTSProvider
from astrbot.core.provider.register import register_provider_adapter
from astrbot.core.utils.astrbot_path import get_astrbot_data_path


@register_provider_adapter(
    "yx520_tts", "yx520 TTS", provider_type=ProviderType.TEXT_TO_SPEECH
)
class Yx520TTS(TTSProvider):
    def __init__(
        self,
        provider_config: dict,
        provider_settings: dict,
    ) -> None:
        super().__init__(provider_config, provider_settings)
        self.provider_config = provider_config
        self.provider_settings = provider_settings

        self.timeout = provider_config.get("timeout", 60)
        if isinstance(self.timeout, str):
            self.timeout = int(self.timeout)

        self.tts_vioce = provider_config.get("tts_vioce", "")

    async def get_audio(self, text: str) -> str:
        return await self.textToVoice(text)

    """
        1 :TVB女    2:懒羊羊    3:磁性男生   4:孙悟空   5:咆哮哥   6:如来佛祖   7:熊二   8:讲解旁白   9:甜美女声   10:小姐姐   11:云龙哥
        12:紫薇     13:四郎     14:猴哥说唱  15:拽拽馒头 16:佛系馒头  17:九小月 18:电子馒头 19:小品艺术家 20:唐山猴哥 21:娇羞猴哥 22:ASMR男声
        23:直率英子  24:八戒     25:紫薇说唱   26:威猛震天   27:黛玉   28:动漫小新   29:顾姐 30:容嬷嬷   31:华妃   32:米老哥   33:动漫海绵
     34:春日部姐姐   35:美小羊    36:神厨老佛爷 37:周天王   38:暗夜萝莉   39:宝宝冯  40:宝青狐妖  41:东厂公公  42:蜡笔小妮   43:樱桃爷爷
        44:龅牙珍   45:派星星    46:章鱼哥哥   47:唐小鸭   48:佩奇猪   49:东北能哥   50:樱桃丸子   51:女儿国王   52:天线宝宝   53:小青
        54:和大人   55:商务殷语   56:王小也   57:林萧   58:小魔童   59:大耳小图   60:低吼男生   61:娱乐扒妹   62:温婉女声   63:朗诵男声
        64:沉稳男声  65:刚毅男子  66:磁性男声   67:清凉男声Pro   68:乒乓解说   69:纪录片解说  70:新闻男主播  71:沉稳解说  72:抑制片男
        273:活力解释 74:娱乐播报  275:清凉女声   76:正气男声   77:辣评娱记   78:科普男声   79:深情诉说   80:雅痞大叔   81:亲爽男声
        82:百科解说  83:扒小编    84:新闻女主播   285:赛事解说   86:宣传男声   87:娱乐播报   88:悬疑解说   89:舌尖解说   90:广告男音
        91:童话解说  92:讲解男声  93:刘语熙   94:心灵鸡汤   95:新闻女声   96:知识讲解   97:八卦娱记   298:新闻锐探   99:温和女声
        100:萌娃百科 101:电竞解说 102:游戏解说  103:动漫解说  104:网文解说  105:清润女声  106:安全哥  107:新闻男生  108:甜妹解说
        109:娱乐扒妹 110:抑制片男 111:解说小帅   112:声控弟弟  113:恐怖电影  114:北京小爷  115:懒小羊  116:霸道彻总  117:清甜女声
        118:低哑男声 119:英勇将军 120:机灵少年  121:高冷男声  122:乖软童声  123:萌娃  124:沉稳男声  125:元气少女  126:乖巧女孩
        127:任性女友 128:嚣张男子 129:奶萌男宝  130:暴躁男  131:慈爱姥爷  132:任性少女  133:乖巧萝莉  134:爽朗大姐  135:幽默老哥
        136:老爷子   137:老婆婆  138:创世女神  139:柔弱男子  140:稚气少女  141:撒娇学妹  142:温软少女  143:冰山霸总  144:少女甜嗓
        145:严厉老太 146:正义小英雄 147:英勇武将   148:热血战士   149:清亮男声Pro   150:娇弱女   151:粗旷男子   152:硬朗大爷
        153:可爱女生 154:和善哥哥   155:病弱少女   156:病娇少女   157:甜美软妹   158:冷冽总裁   159:冷漠厌世女   160:稳重学长
        161:稳重男声 162:活泼女孩   163:冷酷哥哥   164:温柔姐姐   165:调皮公主   166:霸气帝王   167:严肃大叔   168:渊博小叔
        169:松弛男声 170:随侍太监   171:和蔼奶奶   172:洒脱学姐   173:阳光青年   174:阳光少年   175:强势大佬   176:奶萌少女
        177:智慧老者 178:錘子哥   179:幵朗学長   180:正乂勇士   181:平万大叔   182:甜軟萌妹   183:逗趣男声   184:侠客  185:直爽女大
        186:温柔女友 187:清爽男大   188:魅力女友   189:冰山捜男   190:豪放男子   191:自信男声   192:心机御姐   193:柔美女友
        194:乖巧男孩 195:酷捜女   196:剛毅男子   197:正乂女使者  198:和藹苓苓  199:御前公公  200:武則  201:錘子哥  202:正能量姐姐
        203:沉稳大叔 204:亲切阿姨  205:女少侠  206:俊朗男友  207:正直哥哥  208:暖心学姐  209:天真萌宝  210:文静学姐   211:温婉姐姐
        212:天真妹妹 213:爽朗男音  214:亲切伯伯  215:爽朗男声  216:优柔公子  217:随性男声  218:亲切婶婶  219:爽朗男友  220:腹黑小姨
        221:爽朗学长 222:邻居阿姨   223:和善婶婶   224:康定情歌   225:做作夹子音   226:娱乐扒妹II   227:顾姐   228:新闻女主播
        229:亲切女声 230:甜美解说  231:知性女声  232:英语女王  233:玲玲姐姐  234:小萝莉  235:官方客服  236:生活主播  237:情感语录
        238:温柔淑女 239:随性女声   240:少儿故事   241:生活小妙招   242:旅游资讯   243:ASMR女声   244:吴敏霞   245:少儿百科
        246:星闻锐探 247:直播一姐   248:清亮女声   249:谄媚女声   250:军事解说   251:女雷神   252:奶音欣欣子   253:活力解说
        254:语音助手 255:龅牙珍珍  256:厄运少女   257:文艺女声   258:AI旁白  259:甜美悦悦   260:强势妹   261:酷拽女   262:清冷女声
      263:正义女使者 264:电台广播   265:钓系美女   266:硬妹   267:感冒电音   268:武则天   269:理智姐   270:林潇   271:傲娇大小姐
        272:垪解旁白 273:磁性男声  274:电视广告  275:霸道总裁  276:逢制片男  277:解说小仲  278:阳光男生  279:古凡男主   280:慈爰姥爷
        281:葛大爷   282:新闻男声  283:清爽男声  284:广告男声  285:游戏解说男  286:恐怖电影  287:播音旁白  288:茶啊王强  289:译制片男II
        290:唐少  291:温柔男主  292:抱怨男声  293:开朗弟弟  294:渊博小叔  295:和蔼爷爷  296:有声小说  297:翩翩公子  298:单口相声
        299:清亮男声  300:傲娇男声  301:严厉大叔  302:柜哥  303:开朗学长  304:正义勇士  305:快板  306:促销男声  307:锤子哥  308:港配男声
        309:文艺男声  310:质感男声  311:广告男声  2312:温柔男声  313:冰山拽男  314:京腔小爷  315:广州德哥  316:豆蔻少女  317:综艺萝莉
        318:甜软萌妹  319:樱花小哥  320:幺妹  321:天津姐姐  322:京腔  323:大丫  324:湘普甜甜  325:东北老铁  326:广西表哥  327:台湾男生
        328:西安掌柜  329:台湾女生  330:青岛小哥  331:靓女  332:潮汕大叔  333:上海阿姨  334:广普  335:港普男声2  336:川妹子  337:重庆小伙
        338:河南大叔  339:粤语男声  340:天津小哥  341:港普男声  342:太白  343:狐狸姐姐  344:温迪迪  345:太乙  346:鲁班八号  347:说唱小哥
        348:康康舞曲  349:甜美女孩  350:水果舞曲  351:歌唱达人  352:春日甜妹  353:春节甜妹  354:歌唱女王  355:情歌王  356:摇滚男生
        357:清新歌手  358:激扬男声
        """

    async def textToVoice(self, text):
        async with aiohttp.ClientSession() as session:
            url = f"http://www.yx520.ltd/API/wzzyy/api.php?text={text}&voice={self.tts_vioce}"
            async with session.get(url, timeout=self.timeout) as resp:
                if resp.status != 200:
                    return None
                resp_json = await resp.json()
                url = resp_json.get("url", "")
                if not url:
                    return None

            temp_dir = os.path.join(get_astrbot_data_path(), "temp")
            save_path = os.path.join(
                temp_dir, str(uuid.uuid4()).replace("-", "") + ".mp3"
            )

            async with session.get(url) as response:
                if response.status != 200:
                    return None
                with open(save_path, "wb") as f:
                    async for chunk in response.content.iter_chunked(
                        1024 * 8
                    ):  # 8KB分块
                        f.write(chunk)

        return save_path
